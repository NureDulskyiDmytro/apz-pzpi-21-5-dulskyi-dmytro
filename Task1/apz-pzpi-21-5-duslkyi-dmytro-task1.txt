1.1 Background (Передумови)

На сьогоднішній день застосування спеціалізованих програмних
комплексів, призначених для складського обліку, є радше необхідністю, ніж
винятком чи примхою багатих. Без них ефективна робота компанії просто
неможлива. Це стосується всіх учасників ринку, незалежно від статусу.
Дрібний, середній і великий бізнес сьогодні відчуває гостру потребу у
використанні сучасних інформаційних рішень. Автоматизоване управління
складом дозволяє налагодити ефективні взаємозв'язки з клієнтами, значно
збільшити оперативність виконання завдань, здійснювати контроль операцій у
режимі реального часу.

1.2 Business Opportunity (Бізнес-можливості)

SmartStorage - це цілий набір корисних і необхідних опцій. Зокрема, за
допомогою програми можна здійснювати управління товаром, а саме
контролювати температуру і вологість контейнера зберігання, обробляти
замовлення покупців, виписувати рахунки, оформляти резервування товарів,
переглядати місце зберігання та статистику замовлень. Завдяки статистиці
замовлень даний сервіс надає аналіз товарів, а саме аналіз про найпопулярніші
товари, найтриваліші та найкоротші строки зберігання товару.
Джерелом доходу є підприємства, які володіють складським
приміщенням. Монетизація полягає в платній підписці на даний сервіс.
Дана система має великі шанси вийти на світовий ринок, бо SmartStorage
– є унікальним сервісом, який надає контроль товару з будь-якої точки світу, де є
інтернет.
Конкурентами нашого сервісу можуть бути такі компанії як МійСклад,
Scamatic, SkladService, Delovod. Основною перевагою над ними є те, що наша
система надає контроль регулювання температури та вологості спеціального
контейнера та аналіз замовлень.

2.1 Vision Statement (Окреслення концепції)

Головна ідея проєкту SmartStorage полягає в автоматизації управління
складом, яка дозволяє збільшити ефективність праці працівників за допомогою
адресного зберігання. Також автоматизація допомагає керівникам торгових
залів магазинів орієнтуватися в тій кількості товару, який зберігається на
складі і можливий до замовлення. Та за допомогою SmartStorage можна
отримувати статистику та аналіз товарів. І основним призначенням
SmartStorage є те, що існують унікальні контейнери, в яких можна регулювати
температуру та вологість цього контейнера, що надає змогу зберігати різні
види товарів.

2.2 Major Features (Головна функціональність)

MF-1: Реєстрація користувача (працівник склада, замовник): Розробити 
інтуїтивний і простий у використанні інтерфейс для реєстрації нових 
користувачів, включаючи працівників складу та замовників, з можливістю 
заповнення обов'язкових полів та перевірки унікальності інформації.
MF-2: Авторизація користувача: Створити механізм авторизації з 
використанням безпечних методів аутентифікації, таких як паролі, OTP
(одноразові паролі) або біометричні дані, для забезпечення безпеки доступу до 
системи.
MF-3: Управління даними користувачів адміністратором (CRUD): 
Реалізувати можливість адміністратора керувати даними користувачів, 
включаючи створення, читання, оновлення та видалення записів, 
забезпечуючи при цьому обмеження доступу до цих операцій відповідно до 
рівня прав користувачів.
MF-4: Розташування товарів: Розробити функціонал для реєстрації та 
відстеження розташування товарів на складі з використанням системи 
кодування або GPS-технологій для точності та швидкості пошуку.
MF-5: Контроль контейнерів: Створити інструменти для моніторингу та 
контролю стану та місцезнаходження контейнерів з товаром, включаючи 
температуру, вологість та стан упаковки для забезпечення оптимальних умов 
зберігання.
MF-6: Статистика та аналіз товарів: Забезпечити можливість ведення 
статистики та аналізу руху товарів на складі, включаючи найпопулярніші 
товари, тривалість зберігання та інші аспекти, що допоможуть оптимізувати 
управління запасами.
MF-7: Оформлення резервування товарів: Реалізувати функціонал для 
замовлення та резервування товарів користувачами, забезпечуючи зручний 
інтерфейс та швидкість обробки замовлень.
MF-8: Виписка розрахункового рахунку: Створити систему для 
автоматичної генерації розрахункових рахунків для замовлень, що включає 
інформацію про товари, ціни та інші необхідні дані для подальшої оплати 
клієнтами.
MF-9: Перегляд історії заказів: Розробити функціонал для користувачів, 
що дозволяє переглядати історію своїх замовлень, включаючи деталі про 
товари, дати та статуси доставок для зручності ведення обліку та відстеження 
замовлень.
MF-10: Сповіщення про прибуття товару на склад: Забезпечити 
автоматичну систему сповіщень для персоналу складу та адміністраторів про 
прибуття нових товарів на склад для швидкого реагування та подальшої 
обробки замовлень.
MF-11: Відстеження температури та вологості контейнера: Створити 
механізм для постійного відстеження температури та вологості в контейнерах 
з товаром, а також надання відповідних повідомлень про будь-які відхилення 
від заданих стандартів для забезпечення якості зберігання.
MF-12: Надання рекомендацій щодо зберігання певного типу товару:
Реалізувати систему, яка автоматично надає рекомендації щодо оптимальних 
умов зберігання для різних типів товарів на основі їхніх характеристик та 
вимог.
MF-13: Сповіщення про критичні позначки температури і вологості:
Створити систему аварійного сповіщення, яка надсилає повідомлення 
персоналу про будь-які критичні позначки температури і вологості в 
контейнерах для оперативного реагування та запобігання пошкодженням 
товарів.

3.1 Scope of Initial Release (Рамки первинного випуску)

Серверна частина: Обмеження доступу реалізовано шляхом створення 
системи авторизації різного степеню для різних категорій користувачів. 
Програмна логіка розподілена - окремо рівень REST контролерів, які будуть 
оброблювати HTTP запити від клієнтів та викликати методи сервісного рівню, 
у яких буде реалізована бізнес-логіка програмної системи. Хешування 
персональних даних про аккаунт користувача за алгоритмом MD5.
Основні функції:
MF-1: Реєстрація користувача (працівник склада, замовник).
MF-2: Авторизація користувача.
MF-3: Оформленя резервування товарів.
MF-4: Виписка розрахункового рахунку.
MF-5: Контроль контейнерів.
MF-6: Статистика та аналіз товарів.
Клієнтська частина: Отримує дані з серверу за допомогою зазначеного 
вище REST API за протоколом HTTPS. Інтерфейс програмної системи 
підтримує інтернаціоналізацію та локалізацію, а саме використання різних 
форматів дати та часу, англійської та американської системи мір, порядок 
сортування текстових значень. Присутня можливість зміни мови інтерфейсу –
англійської та української. Наявна можливість адаптації під різні розміри та 
типи екранів.
Основні функції:
MF-1 – MF-6.
MF-7: Управління даними користувачів адміністратором (CRUD).
MF-8: Управління товаром складського приміщення адміністратором (CRUD).
Android застосунок: користувачами мобільного додатку виступають 
клієнти – покупці послуг. Для них буде присутня система реєстрації та 
авторизації з валідацією даних. Мобільний застосунок також буде отримувати 
дані з серверу за допомогою REST API за протоколом HTTPS. Застосунок 
надає локалізований інтерфейс, який можна перемикати, двома мовами: 
українською та англійською. Мобільний додаток надає можливість 
контролювати температуру та влажність контейнеру за допомогою Іот 
пристрою.
Основні функції:
MF-3: Оформленя резервування товарів.
MF-4: Виписка розрахункового рахунку.
MF-5: Контроль контейнерів.
MF-9: Перегляд історії заказів.
MF-10: Сповіщення про прибуття товару на склад.
Ioт пристрій: Як і у всіх інших компонентах системи – зв’язок із 
серверною частиною через протокол HTTP. IoT програмний застосунок буде 
зчитувати дані та регулювати температуру або вологість контейнера.
Основні функції:
MF-11: Відстеження температури та вологості контейнера.
MF-12: Надання рекомендацій щодо зберігання певного типу товару.
MF-13: Сповіщення про критичні позначки температури і вологості.

3.2 Scope of Subsequent Releases (Рамки наступних випусків)

AF-1: Автоматична розсилка звітів по пошті в певний час.
AF-2: Автоматизувати систему під магазини.
AF-3: Поліпшити швидкість обробки замовлення.
AF-4: Збільшення кількості мов, а саме німецька, польська, та інші.

4.3 Operating Enviroment (Робоче середовище)
OE-1: Клієнтська частина буде працювати на Angular.js, з 
використанням таких технологій як HTML / CSS. 
OE-2: Сервер буде написаний на Java Spring з використання IDE IntelliJ
IDEA.
OE-3: Для зберігання даних буде використовуватись база даних 
PostgreSQL.
OE-4: Для розробки мобільного додатку буде використано середовище 
розробки Android Studio на мові Java.
OE-5: Для реалізації IoT частини буде використано Arduino Uno R3. 
Скетчі для загрузки до плати будуть написані на мові програмування для 
Arduino, синтаксис якої є полегшеною версією синтаксису мови C++. Для 
зв’язку з мережею Інтернет буде використовуватись модуль Ethernet Shield
