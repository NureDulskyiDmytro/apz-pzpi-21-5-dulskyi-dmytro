Діаграма прецедентів (Use-Case Diagram)

Ця діаграма зображує простий блок-схему, що ілюструє обов'язки адміністратора в системі. Адміністратор має можливість увійти в систему як адмін, що дозволяє йому працювати безпосередньо з системою та взаємодіяти з базою даних. Адміністратор також може отримувати дані з датчиків. Загалом, ця діаграма надає загальний огляд ролі адміністратора в управлінні та взаємодії з системою.

Діаграма пакетів (Package Diagram)

Ця діаграма представляє діаграму залежностей пакетів у програмній системі. Вона показує взаємозв'язки між різними пакетами, де один пакет використовує або залежить від іншого пакету. Центральним пакетом є "MainPackage", який використовує "IoTPackage", "HttpPackage", "DatabasePackage" та "EntityPackage". Діаграма добре структурована і слідує чіткій ієрархії, що полегшує розуміння залежностей між пакетами.
-MainPackage використовує IoTPackage, HttpPackage, DatabasePackage та EntityPackage
-DatabasePackage використовується MainPackage

Діаграма взаємодії

Це діаграма діяльності з назвою "IoT Пристрій". Вона ілюструє потік діяльності, пов'язаний з пристроєм ІоТ, таким як підключення до мережі, отримання даних з датчиків, обробка даних та відправлення даних на сервер. Діаграма включає точки прийняття рішень, паралельні діяльності та кінцеву діяльність для відображення даних. Загалом, діаграма добре спроектована та надає чітке уявлення про різні види діяльності та їх взаємозв'язки.
-Активність "Приєднатися до мережі" пов'язана з наступною умовною вузлом "успіх"
-Якщо умова "успіх" виконана, діяльність переходить до "Отримати дані з датчику"
-"Отримати дані з датчику" пов'язана з іншою умовою "сервер не отримав дані"
-Якщо "сервер не отримав дані" - переходить до "Надіслати дані з датчику на сервер"
-Якщо дані отримані успішно, виконується "Обробити дані, визначити критичні значення"
-Після цього дані виводяться на сторінку

Діаграма діяльнсоті

Це діаграма діяльностіз назвами "Пристрій" та "Сервер". Вона показує взаємодію між пристроєм та сервером в системі ІоТ. Пристрій ініціює процес, підключаючись до мережі, отримуючи дані з датчика та відправляючи дані на сервер. Сервер потім обробляє дані, перевіряє критичні значення та відображає дані на веб-сторінці. Діаграма ефективно ілюструє потік комунікації між пристроєм та сервером, включаючи обмін повідомленнями та точки прийняття рішень.
Всі чотири діаграми добре побудовані та слідують стандартним позначенням та угодам для їх відповідних типів. Вони надають чіткі візуальні уявлення про компоненти системи, їх взаємозв'язки та потік діяльності або взаємодій. Використання відповідних символів, міток та макету полегшує розуміння діаграм та їх призначення.
-Пристрій ініціює приєднання до мережі
-Пристрій отримує дані з датчика і відправляє їх на сервер
-Сервер встановлює з'єднок після запиту пристрою
-Сервер обробляє отримані дані, визначає критичні значення
-Якщо дані успішно оброблені, сервер виводить їх на сторінку
-Якщо обробка даних викликає помилку, пристрій посилає їх повторно.

ВИСНОВКИ

У ході виконання лабораторної роботи були отримані навички з проєктування IoT частини програмної системи. Результатом роботи є розроблена програмна реалізація IoT програмної частини. При розробці продукту було дотримано вимог чистого коду мови програмування Java.
