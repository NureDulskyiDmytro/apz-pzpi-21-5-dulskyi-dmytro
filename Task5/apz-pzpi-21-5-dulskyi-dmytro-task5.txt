Діаграма станів (State Diagram)

Ця діаграма відображає різні стани та переходи в системі. Сутності на діаграмі:
Стани:
Реєстрація
Авторизація
Головна сторінка
Перегляд профілю
Контроль замовлень
Перегляд статистики
Створення замовлення
Перегляд замовлення
Редагування профілю
Переходи:
З реєстрації переходить до авторизації (якщо дані коректні)
З авторизації переходить до головної сторінки
З головної сторінки можна перейти до перегляду профілю, контролю замовлень, перегляду статистики, створення замовлення або перегляду замовлення
З перегляду профілю можна перейти до редагування профілю
Всі інші стани переходять до виходу (exit)

Діаграма прецедентів (Use-Case Diagram)

Акторами є Користувач та система.
Користувач може виконувати такі дії:
Зареєструватися в системі
Увійти в систему (авторизуватися)
Сформувати замовлення
Переглянути статистику замовлень
Отримати інформацію про товар
Змінювати діалог контролю товарів

Діаграма компонентів (Component Diagram)

Система складається з двох основних компонентів: мобільного клієнта та бекенд-сервера.
Мобільний клієнт містить:
Веб-API для взаємодії з сервером
Локальне сховище даних
Бекенд-сервер містить:
Веб-API для обробки запитів від клієнта
Додаткові компоненти системи (не вказані)
Мобільний клієнт взаємодіє з бекенд-сервером через веб-API, надсилаючи запити та отримуючи відповіді.

Діаграма пакетів (Package Diagram)

Проект містить:
Модель розгортання
Вузли
Артефакти
Топологію
Вузли включають пристрої, такі як сервер. Сервер містить середовище виконання, веб-сервер, PostgreSQL та сервер додатків.
Артефакти складаються з користувацького інтерфейсу та програмних артефактів.
Топологія визначає середовища розробки (IntelliJ IDEA), контролю якості (локальне середовище), тестування (Postman) та виробниче середовище.
Зв'язки між компонентами показують, що артефакти користуються топологією середовищ, а середовища виконання використовують артефакти для розгортання та роботи системи.

Висновок

Булт представлені різні діаграми, які описують структуру, поведінку та архітектуру програмної системи. Кожна діаграма має своє призначення та показує систему з різних ракурсів.
Діаграма станів (State Diagram) візуалізує різні стани, в яких може перебувати система, та переходи між ними. Вона дозволяє зрозуміти послідовність дій користувача та відповідні реакції системи.
Діаграма прецедентів (Use-Case Diagram) демонструє основні функції системи та взаємодію між акторами (користувачами) та самою системою. Вона допомагає зрозуміти можливості системи з точки зору користувача.
Діаграма компонентів (Component Diagram) відображає структуру системи на рівні компонентів та їх взаємозв'язки. Вона показує, як різні частини системи взаємодіють між собою, наприклад, клієнтська та серверна частини.
Діаграма пакетів (Package Diagram) описує логічну структуру проекту та його компоненти, такі як моделі розгортання, вузли, артефакти та топологію. Вона допомагає зрозуміти загальну архітектуру системи та її розгортання на різних середовищах.
Ці діаграми є важливими інструментами для розробників та архітекторів програмного забезпечення, оскільки вони дозволяють візуально представити структуру, поведінку та взаємодію компонентів системи на різних рівнях абстракції. Це полегшує розуміння, документування та подальший розвиток програмного забезпечення.
